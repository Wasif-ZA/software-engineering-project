//int farmerx;
//int farmery;
//Farmer f;

// Farmer
//void farmer() {
//  farmerx = 400;
//  farmery = 400;
//}


class Farmer {
  int farmerx;
  int farmery;
  int RandomNUM = (int)random(0, 4);

  Farmer(int x, int y) {

    farmerx = x;
    farmery = y;
  }

  void buildf() {
    //Face
    fill(183, 130, 114, 255);
    rect(farmerx, farmery, 50, 50);

    //Cheek1
    fill(144, 94, 67, 255);
    rect(farmerx, farmery+30, 10, 20);

    //Cheek2
    fill(144, 94, 67, 255);
    rect(farmerx+40, farmery+30, 10, 20);

    //Mouth
    fill(119, 66, 53, 255);
    rect(farmerx+12, farmery+34, 25, 10);

    //Nose
    fill(144, 94, 66, 255);
    rect(farmerx+17, farmery+30, 15, 25);

    //Unibrow
    fill(51, 36, 17, 255);
    rect(farmerx+8, farmery+10, 35, 5);

    //Eye1
    fill(0, 150, 17, 255);
    rect(farmerx+13, farmery+15, 5, 5);

    //Eye2
    fill(0, 150, 17, 255);
    rect(farmerx+31, farmery+15, 5, 5);
  }

  void move() {
    if (key == CODED) {
      if (keyCode == UP && farmery > 50) {
        farmery -= 10;
      } else if (keyCode == DOWN && farmery < height - 25) {
        farmery += 10;
      }
      if (keyCode == LEFT && farmerx > 50) {
        farmerx -= 10;
      } else if (keyCode == RIGHT && farmerx < width - 25) {
        farmerx += 10;
      }
    }
  }

  //void GenerateNums(){
  //  posx = (int)random(60, 700);  // Generate a random number between 60 and 700 for posx
  //  posy = (int)random(60, 1000);  // Generate a random number between 60 and 1000 for posy

  //}
  boolean WallCondtion() {
    int posx;
    int posy;

    int arr[] = {210, 410, 510, 610};
    int arr2[] = {110, 310, 410, 510};

    for (int i=0; i < arr.length; i++) {
      posx=  arr[RandomNUM] ;
      posy= arr2[RandomNUM] ;

      println(posx);
      println(posy);
      //if (farmerx <= posx && farmerx >= posx && farmery <= posy  && farmery >= posy) {
      if (farmerx== posx && farmerx == posy) {

        return true;
      }
    }

    return false;
  }
  void wall() {
    if (WallCondtion() == true) {
      fill(139, 69, 19);  // Brown color
      rect(0, 0, width, 20);  // Top edge
      rect(0, height - 20, width, 20);  // Bottom edge
      rect(0, 0, 20, height);  // Left edge
      rect(width - 20, 0, 20, height);  // Right edge
    }
  }
}
